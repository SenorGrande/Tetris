AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  highscore-service

  Sample SAM Template for highscore-service

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  TableName:
    Type: String
    Default: 'highScoreTable'
    Description: The name of the new DynamoDB table to create and save high scores to.
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z]+$
    ConstraintDescription: 'Required parameter. Must be characters only. No numbers allowed.'

Resources:
  # The Lambda Function
  HighScoreFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: high_score/
      Handler: app.lambda_handler
      Runtime: python3.6
      Policies: 
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Events:
        UpdateHighScore:
          Type: Api
          Properties:
            Path: /update-hs
            Method: post
        GetHighScore:
          Type: Api
          Properties:
            Path: /get-hs
            Method: get

  HighScoreDB:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: !Ref TableName
      AttributeDefinitions:
        - AttributeName: itemId
          AttributeType: S
      KeySchema:
        - AttributeName: itemId
          KeyType: HASH
    ProvisionedThroughput:
      ReadCapacityUnit: 5
      WriteCapacityUnits: 5

  # DynamoDB Table
  # HighScoreDB:
  #   Type: AWS::Serverless::SimpleTable # if you want to define a more complex table, use AWS::DynamoDB::Table
  #   TableName: !Ref TableName
  #   PrimaryKey:
  #       Name: scoreId
  #       Type: String
  #   ProvisionedThroughput:
  #       ReadCapacityUnit: 5
  #       WriteCapacityUnits: 5
  #   Tags:
  #       AppType: Serverless

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  UpdateHighScoreApi:
    Description: "API Gateway endpoint URL for Prod stage for the High Score service to update the high score"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/update-hs/"
  GetHighScoreApi:
    Description: "API Gateway endpoint URL for Prod stage for the High Score service to request the high score"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get-hs/"
  HighScoreFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HighScoreFunction.Arn
  HighScoreFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HighScoreFunctionRole.Arn

# curl current hello world api
# start with post to dynamodb table
# start with get request from dynamodb table